name: e2e-k3s

on:
  pull_request:
    types: [labeled]
    paths:
      - 'pkg/query-service/**'
      - 'frontend/**'

jobs:

  e2e-k3s:
    runs-on: ubuntu-latest
    if: ${{ github.event.label.name == 'ok-to-test' }}
    steps:

      - name: Checkout code
        uses: actions/checkout@v2
      - name: Build query-service image
        env:
          DOCKER_TAG: pull-${{ github.event.number }}
        run: |
          make build-query-service-amd64
          docker images | grep query-service
        #run: make build-query-service-amd64

      - name: Install dependencies
        working-directory: frontend
        run: yarn install
      - name: Run Prettier
        working-directory: frontend
        run: npm run prettify
        continue-on-error: true
      - name: Run ESLint
        working-directory: frontend
        run: npm run lint
        continue-on-error: true
      - name: Build frontend image
        env:
          DOCKER_TAG: pull-${{ github.event.number }}
        run: |
          make build-frontend-amd64
          docker images | grep frontend
        #run: make build-frontend-amd64

      - name: Create a k3s cluster
        uses: AbsaOSS/k3d-action@v2
        with:
          cluster-name: "test-cluster"
          args: >-
            --agents 3
      - name: Inject the built images to the cluster
        env:
          DOCKER_TAG: pull-${{ github.event.number }}
        run: |
          docker images | grep -E 'query-service|frontedn' #FIXME: remove
          k3d image import signoz/query-serivce:$DOCKER_TAG -c test-cluster
          k3d image import signoz/frontend:$DOCKER_TAG -c test-cluster
      - name: Deploy the app
        env:
          DOCKER_TAG: pull-${{ github.event.number }}
        run: |
          helm dependency update deploy/kubernetes/platform
          helm install signoz deploy/kubernetes/platform/ -n platform --create-namespace \
            --wait --timeout 10m0s \
            --set cloud=null \
            --set frontend.service.type=LoadBalancer \
            --set query-service.image.tag=$DOCKER_TAG \
            --set frontend.image.tag=$DOCKER_TAG
          kubectl describe deploy/signoz-frontend -n platform | grep Image
          kubectl describe statefulset/signoz-query-service -n platform | grep Image
          kubectl get pods -n platform
          kubectl get svc -n platform
      - name: Kick off a sample-app workload
        run: |
          kubectl create ns sample-application
          kubectl -n sample-application apply -Rf sample-apps/hotrod/
          kubectl -n sample-application run strzal --image=djbingham/curl \
            --restart='OnFailure' -i --rm --command -- curl -X POST -F \
            'locust_count=6' -F 'hatch_rate=2' http://locust-master:8089/swarm
          kubectl -n sample-application get deploy --output name | xargs -r -n1 -t kubectl -n sample-application rollout status --timeout=300s
          kubectl -n sample-application get statefulset --output name | xargs -r -n1 -t kubectl -n sample-application rollout status --timeout=300s
          kubectl -n sample-application get daemonset --output name | xargs -r -n1 -t kubectl -n sample-application rollout status --timeout=300s
      - name: Start tunnel
        env:
          SUBDOMAIN: pull-${{ github.event.number }}-signoz
        run: |
          npm install -g localtunnel
          host=$(kubectl get svc -n platform | grep signoz-frontend | tr -s ' ' | cut -d" " -f4)
          port=$(kubectl get svc -n platform | grep signoz-frontend | tr -s ' ' | cut -d" " -f5 | cut -d":" -f1)
          lt -p $port -l $host -s $SUBDOMAIN
